{"version":3,"sources":["components/server-connection/server-connection.jsx","components/box/box.jsx","components/start/start.jsx","components/main/main.jsx","components/end/end.jsx","App.js","serviceWorker.js","index.js","components/start/start.module.scss","components/end/end.module.scss","components/server-connection/server-connection.module.scss","components/main/main.module.scss"],"names":["ServerConnection","setServer","useState","serverURL","setServerURL","className","styles","serverConnection","title","noValidate","autoComplete","TextField","onChange","event","target","value","label","Button","button","onClick","socketIOClient","variant","color","Box","position","speed","expand","mesh","useRef","useFrame","current","rotation","x","y","props","useSpring","scale","castShadow","ref","attach","factor","softShadows","Start","server","gameCode","setGameCode","start","emit","join","id","button2","canvas","shadowMap","colorManagement","camera","fov","intensity","shadow-mapSize-width","shadow-mapSize-height","shadow-camera-far","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","receiveShadow","Math","PI","args","opacity","Main","gameData","player","gameStarted","roomName","restartGame","boxes","map","el","key","colors","owner","onBoxClick","main","waiting","goBack","End","endResults","end","playerOne","playerTwo","App","setgameData","setPlayer","setRoomName","setGameStarted","setEndResults","useEffect","on","data","results","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.eafb08c7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport styles from \"./server-connection.module.scss\";\r\n\r\nexport const ServerConnection = ({ setServer }) => {\r\n  const [serverURL, setServerURL] = useState(null);\r\n\r\n  const handleChange = (event) => {\r\n    setServerURL(event.target.value);\r\n  };\r\n\r\n  const onClick = () => {\r\n    if (serverURL) setServer(socketIOClient(serverURL));\r\n  };\r\n\r\n  return (\r\n    <div className={styles.serverConnection}>\r\n      <div className={styles.title}>Connect to Server</div>\r\n      <form noValidate autoComplete=\"off\">\r\n        <TextField onChange={handleChange} label=\"Server URL\" />\r\n      </form>\r\n      <Button\r\n        className={styles.button}\r\n        onClick={onClick}\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n      >\r\n        Connect\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport { useFrame } from \"react-three-fiber\";\r\nimport { useSpring, a } from \"react-spring/three\";\r\nimport { MeshWobbleMaterial } from \"drei\";\r\n\r\nexport const Box = ({ position, color, speed, onClick, expand }) => {\r\n  const mesh = useRef(null);\r\n  useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01));\r\n\r\n  const props = useSpring({\r\n    scale: expand ? [1.4, 1.4, 1.4] : [1, 1, 1],\r\n  });\r\n\r\n  return (\r\n    <a.mesh\r\n      onClick={onClick}\r\n      scale={props.scale}\r\n      castShadow\r\n      position={position}\r\n      ref={mesh}\r\n    >\r\n      <boxBufferGeometry attach=\"geometry\" />\r\n      <MeshWobbleMaterial\r\n        attach=\"material\"\r\n        color={color}\r\n        speed={speed}\r\n        factor={0.6}\r\n      />\r\n    </a.mesh>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport styles from \"./start.module.scss\";\r\nimport { Canvas } from \"react-three-fiber\";\r\nimport { softShadows } from \"drei\";\r\nimport { Box } from \"../box\";\r\n\r\nsoftShadows();\r\n\r\nexport const Start = ({ server }) => {\r\n  const [gameCode, setGameCode] = useState(null);\r\n\r\n  const onNewGameClick = () => {\r\n    server.emit(\"newGame\");\r\n  };\r\n\r\n  const onJoinGameClick = () => {\r\n    server.emit(\"joinGame\", gameCode);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setGameCode(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.start}>\r\n        <div className={styles.title}>\r\n          BOX <strong>FIGHT</strong>\r\n        </div>\r\n        <Button\r\n          className={styles.button}\r\n          onClick={onNewGameClick}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n        >\r\n          New Game\r\n        </Button>\r\n        <div className={styles.join}>\r\n          <TextField\r\n            onChange={handleChange}\r\n            id=\"standard-basic\"\r\n            label=\"Game Code\"\r\n          />\r\n          <Button\r\n            className={styles.button2}\r\n            onClick={onJoinGameClick}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Join Game\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      {/* 3D SCENE */}\r\n      <Canvas\r\n        className={styles.canvas}\r\n        shadowMap\r\n        colorManagement\r\n        camera={{ position: [0, 2, 10], fov: 60 }}\r\n      >\r\n        <ambientLight intensity={0.3} />\r\n        <directionalLight\r\n          castShadow\r\n          position={[0, 10, 0]}\r\n          intensity={1.5}\r\n          shadow-mapSize-width={1024}\r\n          shadow-mapSize-height={1024}\r\n          shadow-camera-far={50}\r\n          shadow-camera-left={-10}\r\n          shadow-camera-right={10}\r\n          shadow-camera-top={10}\r\n          shadow-camera-bottom={-10}\r\n        />\r\n        <pointLight position={[-10, 0, -20]} intensity={0.5} />\r\n        <pointLight position={[0, -10, -0]} intensity={1.5} />\r\n        <Box position={[4, 0, 1]} color=\"#03a9f4\" speed={5} />\r\n        <Box position={[-4, 0, 1]} color=\"#f50057\" speed={5} />\r\n        <group>\r\n          <mesh\r\n            receiveShadow\r\n            rotation={[-Math.PI / 2, 0, 0]}\r\n            position={[0, -3, 0]}\r\n          >\r\n            <planeBufferGeometry attach=\"geometry\" args={[100, 100]} />\r\n            <shadowMaterial attach=\"material\" opacity={0.3} />\r\n          </mesh>\r\n        </group>\r\n      </Canvas>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Canvas } from \"react-three-fiber\";\r\nimport { Box } from \"../box\";\r\nimport { OrbitControls, Html } from \"drei\";\r\nimport styles from \"./main.module.scss\";\r\n\r\nexport const Main = ({\r\n  gameData,\r\n  server,\r\n  player,\r\n  gameStarted,\r\n  roomName,\r\n  restartGame,\r\n}) => {\r\n  const onBoxClick = (key) => {\r\n    if (gameStarted) {\r\n      server.emit(\"gameChange\", {\r\n        key: key,\r\n        player: player,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Canvas colorManagement camera={{ position: [-5, 3, 10], fov: 100 }}>\r\n        <directionalLight castShadow position={[0, 10, 0]} intensity={1.5} />\r\n        <pointLight position={[-10, 0, -20]} intensity={0.5} />\r\n        <pointLight position={[0, -10, -0]} intensity={1.5} />\r\n        {gameData &&\r\n          gameData.boxes.map((el, key) => {\r\n            return (\r\n              <Box\r\n                key={key}\r\n                position={el.position}\r\n                color={gameData.colors[el.owner]}\r\n                speed={6}\r\n                onClick={() => onBoxClick(key)}\r\n                expand={el.owner === player}\r\n              />\r\n            );\r\n          })}\r\n        {!gameStarted && (\r\n          <Html>\r\n            <div className={styles.main}>\r\n              <div className={styles.waiting}>\r\n                Room name: <strong>{roomName}</strong>. Waiting for player 2.\r\n                <div onClick={restartGame} className={styles.goBack}>\r\n                  Go Back.\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Html>\r\n        )}\r\n        {gameStarted && <OrbitControls />}\r\n      </Canvas>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport styles from \"./end.module.scss\";\r\n\r\nexport const End = ({ endResults, restartGame }) => {\r\n  return (\r\n    <div className={styles.end}>\r\n      <div className={styles.playerOne}>\r\n        <strong>Player One:</strong> {endResults[1]}\r\n      </div>\r\n      <div className={styles.playerTwo}>\r\n        <strong>Player Two:</strong> {endResults[2]}\r\n      </div>\r\n      <Button\r\n        className={styles.button}\r\n        onClick={restartGame}\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n      >\r\n        Restart\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport { ServerConnection } from \"./components/server-connection\";\nimport { Start } from \"./components/start\";\nimport { Main } from \"./components/main\";\nimport { End } from \"./components/end\";\nimport \"./App.scss\";\n\nexport const App = () => {\n  const [server, setServer] = useState(null);\n  const [gameData, setgameData] = useState(null);\n  const [player, setPlayer] = useState(null);\n  const [roomName, setRoomName] = useState(null);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [endResults, setEndResults] = useState(null);\n\n  //Game Started Handler\n  useEffect(() => {\n    server &&\n      server.on(\"gameStarted\", (data) => {\n        setgameData(data.gameData);\n        setPlayer(data.player);\n        setRoomName(data.roomName);\n      });\n  }, [server]);\n\n  //Second Player Joined Handler\n  useEffect(() => {\n    server &&\n      server.on(\"playerJoined\", (data) => {\n        setGameStarted(true);\n      });\n  }, [server]);\n\n  //Game changes handler\n  useEffect(() => {\n    server &&\n      server.on(\"gameChange\", (data) => {\n        setgameData(data.gameData);\n      });\n  }, [server]);\n\n  //Game end handler\n  useEffect(() => {\n    server &&\n      server.on(\"endGame\", (data) => {\n        setEndResults(data.results);\n      });\n  }, [server]);\n\n  const restartGame = () => {\n    setgameData(null);\n    setPlayer(null);\n    setRoomName(null);\n    setGameStarted(false);\n    setEndResults(null);\n  };\n\n  return (\n    <div className=\"app\">\n      {!server && <ServerConnection setServer={setServer} />}\n      {server && !gameData && (\n        <Start server={server} setgameData={setgameData} />\n      )}\n      {gameData && server && !endResults && (\n        <Main\n          gameData={gameData}\n          server={server}\n          player={player}\n          gameStarted={gameStarted}\n          roomName={roomName}\n          restartGame={restartGame}\n        />\n      )}\n      {endResults && <End endResults={endResults} restartGame={restartGame} />}\n    </div>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"start\":\"start_start__2tcII\",\"title\":\"start_title__J0aBQ\",\"button\":\"start_button__1MQUr\",\"button2\":\"start_button2__3kymg\",\"join\":\"start_join__39Kb7\",\"canvas\":\"start_canvas__39xwX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"end\":\"end_end__1b5ge\",\"playerOne\":\"end_playerOne__2yYBY\",\"playerTwo\":\"end_playerTwo__2kZs9\",\"button\":\"end_button__10kDx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"serverConnection\":\"server-connection_serverConnection__G5jAj\",\"title\":\"server-connection_title__2FhWh\",\"button\":\"server-connection_button__T8Ga_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__2oLaU\",\"waiting\":\"main_waiting__nS83C\",\"goBack\":\"main_goBack__2GJni\"};"],"sourceRoot":""}